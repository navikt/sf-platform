name: "Validate"
description: "Validate build"
inputs:
  devhub:
    description: Username or alias of the dev hub org
    required: true
  pools:
    description: Name of pools to use
    required: true
  ref:
    description: The head ref of the branch that is proposed to be merged
    required: false
  baseRef:
    description: The sha/ref to the base commit against which this ref will be merged into
    required: false
  deleteScratch:
    description: Delete scratch org after validation
    required: false
    default: "true"
  packageKey:
    description: Keys to be used while installing any managed package dependencies. Required format is a string of key-value pairs separated by spaces e.g. packageA:key packageB:key
    required: false
  mode:
    description: One of these individual|fastfeedback|thorough|ff-release-config|thorough-release-config
    default: "thorough"
    required: false
  releaseConfig:
    description: (Required if the release modes are ff-relese-config or thorough-release-config), Path to the config file which determines which impacted domains need to be validated
    required: false
  coveragePercent:
    description: Minimum required percentage coverage for validating code coverage of packages with Apex classes
    default: "75"
    required: false
runs:
  using: composite
  steps:
    - name: validate
      shell: bash
      run: |
        command=("sfp" "validate" "pool" "--pools" "${POOLS}" "--targetdevhubusername" "${DEVHUB_ALIAS}" "--coveragepercent" "${COVERAGE_PERCENT}" "--mode" "${MODE}" "--logsgroupsymbol" "::group::,::endgroup::")


        if [ "${REF}" ]; then
          command+=( "--ref" "${REF}" )
        fi

        if [ "${BASE_REF}" ]; then
          command+=( "--baseRef" "${BASE_REF}" )
        fi

        if [ "${DELETE_SCRATCH}" == "true" ];
        then
          command+=("--deletescratchorg")
        fi

        echo "Executing command: ${command[*]}"
        "${command[@]}"
      env:
        POOLS: ${{ inputs.pools }}
        DEVHUB_ALIAS: ${{ inputs.devhub }}
        COVERAGE_PERCENT: ${{ inputs.coveragePercent }}
        MODE: ${{ inputs.mode }}
        REF: ${{ inputs.ref }}
        BASE_REF: ${{ inputs.baseRef }}
        DELETE_SCRATCH: ${{ inputs.deleteScratch }}
