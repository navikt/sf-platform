name: "Authenticate org"
description: "Authenticate a Salesforce org"
inputs:
  auth-url:
    description: "The auth URL for use with sf org login"
    required: true
  alias:
    description: "Alias for the authenticated org"
    required: true
  setDefaultUsername:
    description: Set the authenticated org as the default username that all commands run against.
    default: "false"
    required: false
  setDefaultDevhubUsername:
    description: Set the authenticated org as the default dev hub org for scratch org creation
    default: "false"
    required: false
runs:
  using: "composite"
  steps:
    # Authenticate org
    - name: Authenticate org
      run: |
        printf -v red '\033[0;31m'
        printf -v yellow '\033[0;33m'
        printf -v green '\033[0;32m'
        printf -v bold '\033[1m'
        printf -v reset '\033[0m'

        echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"
        echo "${yellow}${bold}Authenticate org ðŸ”’${reset}"
        echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"

        echo ${{ inputs.auth-URL }} > ./SFDX_URL.txt

        command=(sf org login sfdx-url --sfdx-url-file ./SFDX_URL.txt --alias ${{ inputs.alias }})

        if [ ${{ inputs.setDefaultUsername }} ];
        then
          command+=(--set-default)
        fi

        if [ ${{ inputs.setDefaultDevhubUsername }} ];
        then
          command+=(--set-default-dev-hub)
        fi

        command+=(--json)

        "${command[@]}" > loginResult.json

        if [ "$(jq .status loginResult.json)" == 1 ];
        then
          echo "::error title=Failed to authenticate::$(jq .message authResult.json)"
          rm -f ./SFDX_URL.txt
          rm -f ./loginResult.json
        else
          echo "${green}${bold}Authenticate org successfull.${reset}"
        fi

        echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"

        rm -f ./SFDX_URL.txt
        rm -f ./loginResult.json
      shell: bash
