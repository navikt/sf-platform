name: "Commit files"
description: "Commit files to the repository"
inputs:
  files:
    description: "List of filenames with path to the files to commit, separated by a comma"
    required: true
  commitMessage:
    description: "Commit message"
    default: "Commit from bot"
    required: true
  token:
    description: "GitHub token"
    required: true
runs:
  using: "composite"
  steps:
    - name: Commit
      shell: bash
      run: |
        printf -v red '\033[0;31m'
        printf -v yellow '\033[0;33m'
        printf -v green '\033[0;32m'
        printf -v bold '\033[1m'
        printf -v reset '\033[0m'

        IFS=',' read -ra FILES <<< "$FILES"

        echo "::group::Commit files"
        if [ ${#FILES[@]} -gt 0 ]; then
          # Prepare the JSON payload
          JSON_PAYLOAD=$(cat <<EOF
          {
            "query": "$(cat .github/api/createCommitOnBranch.gql)",
            "variables": {
              "githubRepository": "${REPOSITORY}",
              "branchName": "${REF_NAME}",
              "expectedHeadOid": "$(git rev-parse HEAD)",
              "commitMessage": "${COMMIT_MESSAGE}",
              "files": [
          EOF
          )

          FILES_ARRAY=""
          for file in "${FILES[@]}"; do
            if [ -f "$file" ] && [ -r "$file" ]; then
              echo "${green}Adding file $file${reset}"
              base64_content=$(base64 -w0 "$file")
              FILES_ARRAY+="{\"path\": \"$file\", \"contents\": \"$base64_content\"},"
            else
              echo "${red}File $file does not exist, skipping.${reset}"
            fi
          done

          # Remove the last comma if there are files
          if [ -n "$FILES_ARRAY" ]; then
            FILES_ARRAY=${FILES_ARRAY::-1} # Remove trailing comma
          fi

          JSON_PAYLOAD+=$(cat <<EOF
          $FILES_ARRAY
              ]
            }
          }
          EOF
          )

          echo "${green}${bold}Executing GraphQL query via curl:${reset} ${yellow}curl -X POST -H 'Authorization: bearer ***' -H 'Content-Type: application/json' -d '$JSON_PAYLOAD' https://api.github.com/graphql${reset}"

          # Actually execute the curl command
          if ! curl_output=$(curl -X POST \
            -H 'Authorization: bearer ${GH_TOKEN}' \
            -H 'Content-Type: application/json' \
            -d "$JSON_PAYLOAD" \
            https://api.github.com/graphql 2>&1); then
              echo "::error::Failed to commit changes. Curl output: $curl_output"
              exit 1
          fi

          echo "GitHub API response: $curl_output"
        else
          echo "No files to commit."
        fi
        echo "::endgroup::"
      env:
        REPOSITORY: ${{ github.repository }}
        REF_NAME: ${{ github.ref_name }}
        FILES: ${{ inputs.files }}
        COMMIT_MESSAGE: ${{ inputs.commitMessage }}
        GH_TOKEN: ${{ inputs.token }}
