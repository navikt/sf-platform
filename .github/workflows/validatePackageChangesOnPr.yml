name: "[PR] Validate package changes"
on:
  pull_request:
    types: [opened, ready_for_review, reopened]
    paths:
      - "src/**"
  workflow_dispatch:
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
jobs:
  staticCodeValidation:
    name: Validation jobs
    uses: navikt/sf-platform/.github/workflows/ciStaticCodeValidation.yml@main
    permissions:
      contents: read
      security-events: write

  checkChanges:
    name: Check changes
    needs: staticCodeValidation
    runs-on: ubuntu-latest
    outputs:
      hasSrcChanges: ${{ steps.checkChanges.outputs.hasSrcChanges }}
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: false

      - uses: navikt/sf-platform/.github/actions/checkForPackageChanges@7b67975d845abcab930fce951fbee410923213fb
        id: checkChanges

  validateChanges:
    name: Validate changes
    needs: checkChanges
    if: ${{ github.event_name == 'workflow_dispatch' || needs.checkChanges.outputs.hasSrcChanges == 'true' }}
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:${{ vars.SFP_CONTAINER_VERSION }}
    permissions:
      contents: read
    env:
      POOLS: ${{ vars.DEFAULT_CI_POOL }}
      DEVHUB_ALIAS: "devhub"
      COVERAGE_PERCENT: ${{ vars.CODE_COVERAGE_PERCENTAGE }}
      SFP_LOG_LEVEL: ${{ vars.SFP_LOG_LEVEL }}
      EVENT: ${{ github.event_name }}
      GH_AUTH_TOKEN: ${{ secrets.GITHUB_TOKEN }}
      PULL_REQUEST_ID: ${{ github.event.pull_request.node_id }}
    steps:
      - name: "Checkout"
        uses: actions/checkout@11bd71901bbe5b1630ceea73d27597364c9af683
        with:
          fetch-depth: 0
          persist-credentials: false

      - name: Authenticate DevHub
        uses: navikt/sf-gha-authenticateOrg@da2f995ee865e05111574719abfc5ba12b459f0c
        with:
          auth-url: ${{ secrets.SF_DEVHUB_URL }}
          alias: "devhub"
          setDefaultDevhubUsername: "true"

      - name: Validate against CI Pool
        if: ${{ github.event_name == 'pull_request' }}
        run: |
          command=("sfp" "validate" "pool")
          command+=("--pools" "${POOLS}")
          command+=("--targetdevhubusername" "${DEVHUB_ALIAS}")
          command+=("--mode" "${MODE}")
          command+=("--logsgroupsymbol" "::group::,::endgroup::")
          command+=("--loglevel" "${SFP_LOG_LEVEL}")

          if [ "${COVERAGE_PERCENT}" ]; then
            command+=("--coveragepercent" "${COVERAGE_PERCENT}")
          fi

          if [ "${REF}" ]; then
            command+=( "--ref" "${REF}" )
          fi

          if [ "${BASE_REF}" ]; then
            command+=( "--baseRef" "${BASE_REF}" )
          fi

          if [ "${DELETE_SCRATCH}" == "true" ]; then
            command+=("--deletescratchorg")
          fi

          echo "Executing command: ${command[*]}"
          "${command[@]}"
        env:
          MODE: "thorough"
          REF: ${{ github.event.pull_request.head.sha }}
          BASE_REF: ${{ github.event.pull_request.base.sha }}
          DELETE_SCRATCH: "true"

      - name: Delete Stale Validation Org
        if: ${{ failure() }}
        run: |
          if sf org list --json | jq -e '.result[] | select(.isDefaultUsername == true)' > /dev/null; then
            sf org delete scratch --no-prompt
          fi

  setPullRequestToDraft:
    name: Set pull request to draft
    needs: validateChanges
    if: ${{ needs.validateChanges.result == 'failure' }}
    runs-on: ubuntu-latest
    permissions:
      contents: write
      pull-requests: write
    steps:
      - name: Set pull request to draft
        uses: navikt/sf-platform/.github/actions/setPrToDraft@7b67975d845abcab930fce951fbee410923213fb
        with:
          pullRequestId: ${{ github.event.pull_request.node_id }}
