name: "Build and Publish"
on:
  workflow_call:
    secrets:
      SF_DEVHUB_URL:
        required: true
concurrency:
  group: ${{ github.workflow }}-${{ github.ref_name }}
jobs:
  checkChanges:
    name: Check changes
    runs-on: ubuntu-latest
    outputs:
      continueWorkflow: ${{ steps.checkChanges.outputs.continueWorkflow }}
    permissions:
      contents: read
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: "Check for changes in src folder"
        id: checkChanges
        run: |
          printf -v red '\033[0;31m'
          printf -v yellow '\033[0;33m'
          printf -v green '\033[0;32m'
          printf -v bold '\033[1m'
          printf -v reset '\033[0m'
          printf -v newLine '\n'

          echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"
          echo "${yellow}${bold}Check for changes in source code${reset}"
          echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"

          echo "${yellow}Checking if there has been changes to source code by running git diff on the src folder excluding markdown files${reset}"

          if [ ${{ github.event_name == 'pull_request' }} ]; then
            changes=$(git diff "${{ github.event.pull_request.base.ref }}".."${{ github.event.pull_request.head.sha }}" --ignore-all-space --name-only -- src/)
          else
            changes=$(git diff "${{ github.ref_name }}^" "${{ github.ref_name }}" --ignore-all-space --name-only -- src/)
          fi

          nonMarkdownChanges=""
          continueWorkflow=true

          echo "${yellow}${bold}Changes:${reset}"
          echo "$changes"

          if [ -n "$changes" ]; then
            nonMarkdownChanges=$(echo $changes  | grep -v '\.md$')

            if [ -n "$nonMarkdownChanges" ]; then
              echo "${green}${bold}There have been changes to non-Markdown files! Start building 🏗️${reset}"
            else
              echo "${yellow}No changes to non-Markdown files detected. Cancelling the workflow${reset}"
              continueWorkflow=false
            fi
            
          else
            echo "${yellow}No changes to files in src folder. Cancelling the workflow${reset}"
            continueWorkflow=false
          fi

          echo "continueWorkflow=$continueWorkflow" >> "$GITHUB_OUTPUT"

          echo "${yellow}${bold}------------------------------------------------------------------------------------------${reset}"

  buildAndPublish:
    name: Build and Publish
    needs: checkChanges
    if: ${{ needs.checkChanges.outputs.continueWorkflow == 'true' }}
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:${{ vars.SFP_CONTAINER_VERSION }}
    permissions:
      contents: write
      packages: write
    steps:
      - name: "Checkout"
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
          ref: ${{ github.ref_name }}

      - name: "Set Git Config"
        run: |
          git config --global user.email "<>"
          git config --global user.name "GitHub Action"
          git config --system --add safe.directory "$GITHUB_WORKSPACE"

      - name: Authenticate node
        if: ${{ github.ref_name == 'main' }}
        uses: navikt/sf-platform/.github/actions/authenticateNode@main

      - name: Authenticate DevHub
        uses: navikt/sf-platform/.github/actions/authenticateOrg@main
        with:
          auth-url: ${{ secrets.SF_DEVHUB_URL }}
          alias: "devhub"
          setDefaultDevhubUsername: "true"

      - name: Validate against CI Pool
        uses: navikt/sf-platform/.github/actions/ciValidate@main
        with:
          devhub: "devhub"
          pools: "ciPlatform"
          ref: ${{ github.event_name == 'pull_request' && github.sha || '' }}
          baseRef: ${{ github.event_name == 'pull_request' && github.sha || '' }}

      - name: Quick build
        uses: navikt/sf-platform/.github/actions/ciQuickBuild@main

      - name: Build
        uses: navikt/sf-platform/.github/actions/build@main

      - name: Publish artifacts
        if: ${{ github.ref_name == 'main' }}
        uses: navikt/sf-platform/.github/actions/publishArtifact@main
        with:
          nodeToken: ${{ secrets.GITHUB_TOKEN }}

      - name: Generate Release Name
        if: ${{ github.ref_name == 'main' }}
        id: generate_name
        run: |
          echo "releaseName=sf-platform_$(date +%s%3N)" >> $GITHUB_OUTPUT

      - name: Generate Release Definition
        if: ${{ github.ref_name == 'main' }}
        uses: navikt/sf-platform/.github/actions/generateReleaseDefinition@main
        with:
          branchToCommitTo: ${{ github.ref_name }}
          gitRef: ${{ github.sha }}
          pathToConfigFile: config/releaseConfig.yml
          releaseName: ${{ steps.generate_name.outputs.releaseName }}
          directory: "release-definition"

      - name: Upload artifacts and logs
        if: always()
        uses: navikt/sf-platform/.github/actions/uploadWorkflowArtifactsAndLogs@main
        with:
          artifactName: "build-artifacts"
          uploadArtifacts: true
          logName: "build-logs"
          publishLogs: true
