name: "Replenish platform pools"
on:
  workflow_dispatch:
    inputs:
      gitRef:
        description: "Commit Id from where the pools should be created"
        required: false
        default: "main"
      ciPoolTag:
        description: "Ci Pool Tag"
        required: true
        default: "ciPlatform"
      ciPoolConfigPath:
        description: "Ci Pool Config Path"
        required: true
        default: "config/sf-ci-platform-pool-def.json"
      devPoolTag:
        description: "Dev Pool Tag"
        required: true
        default: "platform"
      devPoolConfigPath:
        description: "Dev Pool Config Path"
        required: true
        default: "config/sf-platform-pool-def.json"

  # Det er satt opp skedulering for når poolet oppdateres.
  # Det er ikke behov for å kjøre denne jobber 24/7 og det er derfor satt opp noen skeduleringer (husk at tid er UTC)
  # Det kjøres en jobb hver time 08:00-17:00 mandag til fredag, dette er fordelt på to jobber fordelt på vinter/sommertid
  # Hver natt opprettes det scratcher sånn at man ikke risikerer å være tom dagen etter. Denne kjører alle dager sånn at man ikke er tom i helger dersom noe kritisk skulle oppstå
  # schedule:
  #   - cron: "15 06-15 * 4-10 1-5" #Sommertid:  At minute 15 past every hour from 6 through 15 on every day-of-week from Monday through Friday in every month from April through October.
  #   - cron: "15 07-16 * 1-3,11,12 1-5" #Vintertid: At minute 15 past every hour from 7 through 16 on every day-of-week from Monday through Friday in every month from January through March, November, and December.
  #   - cron: "15 2 * * *" # At 02:15.

jobs:
  createPool:
    name: "Replenish Pool"
    runs-on: ubuntu-latest
    container: ghcr.io/flxbl-io/sfp:latest
    timeout-minutes: 720 #Set to Maximum Time out
    strategy:
      matrix:
        include:
          - poolType: "CI"
            # poolTag: ${{ inputs.ciPoolTag }}
            poolConfigPath: ${{ inputs.ciPoolConfigPath }}
            deleteJobType: allscratchorgs
          - poolType: "DEV"
            # poolTag: ${{ inputs.devPoolTag }}
            poolConfigPath: ${{ inputs.devPoolConfigPath }}
            deleteJobType: unassigned
    env:
      poolTag: ""
    permissions:
      contents: read
      packages: read
    steps:
      - run: echo "poolTag=$(jq --raw-output '.tag' ${{ matrix.poolType.poolConfigPath }})" >> $GITHUB_ENV

      - uses: actions/checkout@v4
        with:
          ref: ${{ inputs.gitRef }}
          fetch-depth: 0

      - name: "Authenticate Dev Hub"
        uses: navikt/crm-workflows-base/.github/actions/authenticateOrg@dxAtScale
        with:
          auth-url: ${{ secrets.CRM_PROD_SFDX_URL }}
          alias: devhub

      - name: "Clear pool"
        id: clearPool
        if: ${{ github.event.schedule == '15 2 * * *' }}
        uses: navikt/sf-platform/.github/actions/ciDeletePool@main
        with:
          devhub: "devhub"
          poolTag: ${{ env.poolTag }}
          deleteJobType: ${{ matrix.poolType.deleteJobType }}

      - name: "Create Pool"
        uses: navikt/sf-platform/.github/actions/ciCreatePool@main
        with:
          devhub: "devhub"
          poolConfigPath: ${{ matrix.poolType.poolConfigPath }}
          nodeToken: ${{ secrets.GITHUB_TOKEN }}

      - name: "Delete orphans"
        uses: navikt/sf-platform/.github/actions/ciDeletePool@main
        with:
          devhub: "devhub"
          deleteJobType: orphans
